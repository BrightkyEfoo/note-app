on:
  workflow_dispatch:
env:
  NODE_VERSION: '20.x'
  FOLDER: ~/applications/note-app/backend
  IMAGE: backend
  IMAGE_VERSION: 1.${{ github.run_number }}.0

jobs:
    create-folder:
        name: Create folder
        runs-on: ubuntu-latest
        steps:
            - name: Create folder
              uses: appleboy/ssh-action@v1.0.3
              with:
                host: ${{ secrets.HOST }}
                port: ${{ secrets.PORT }}
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.PRIVATE_KEY }}
                script: |
                    mkdir -p  ${{ env.FOLDER }}
                    chmod ugo+rwx  ${{ env.FOLDER }}
    copy-configs:
        name: 'copy configs'
        runs-on: ubuntu-latest
        needs: create-folder
        steps:
            - uses: actions/checkout@master
            - name: copy file via ssh password
              uses: appleboy/scp-action@master
              with:
                host: ${{ secrets.HOST }}
                port: ${{ secrets.PORT }}
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.PRIVATE_KEY }}
                source: 'docker-compose.yml'
                target: ${{ env.FOLDER }}

    run-container:
        name: 'Run container'
        runs-on: ubuntu-latest
        steps:
            - name: Run container
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.HOST }}
                port: ${{ secrets.PORT }}
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.PRIVATE_KEY }}
                script: |

                    docker compose -f ${{ env.FOLDER }}/docker-compose.yml stop || true
                    docker compose -f ${{ env.FOLDER }}/docker-compose.yml rm -f || true

                    rm ${{ env.FOLDER }}/.env
                    echo TZ=UTC >> ${{ env.FOLDER }}/.env
                    echo PORT=3333 >> ${{ env.FOLDER }}/.env
                    echo HOST=${{ secrets.HOST }} >> ${{ env.FOLDER }}/.env
                    echo LOG_LEVEL=info >> ${{ env.FOLDER }}/.env
                    echo APP_KEY=${{ secrets.APP_KEY }} >> ${{ env.FOLDER }}/.env
                    echo NODE_ENV=production >> ${{ env.FOLDER }}/.env
                    echo DB_HOST=postgres >> ${{ env.FOLDER }}/.env
                    echo DB_PORT=5432 >> ${{ env.FOLDER }}/.env
                    echo DB_USER=${{ secrets.DB_USER }} >> ${{ env.FOLDER }}/.env
                    echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> ${{ env.FOLDER }}/.env
                    echo DB_DATABASE=note_app >> ${{ env.FOLDER }}/.env
                    docker compose -f ${{ env.FOLDER }}/docker-compose.yml up -d